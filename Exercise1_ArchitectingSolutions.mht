From: <Saved by Blink>
Snapshot-Content-Location: https://aws-tc-largeobjects.s3.us-west-2.amazonaws.com/DEV-AWS-MO-Architecting/exercise-1-serverless.html
Subject: Exercise 1: Architecting Solutions: Building a Proof of Concept for a Serverless Solution
Date: Mon, 8 Jul 2024 21:15:15 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--EazvHQuk4rvzvE5QVH4c7IWfvujUsGbj0j78sMiCw3----"


------MultipartBoundary--EazvHQuk4rvzvE5QVH4c7IWfvujUsGbj0j78sMiCw3----
Content-Type: text/html
Content-ID: <frame-A8BDCF90B53274B90E8546D01AC52C53@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://aws-tc-largeobjects.s3.us-west-2.amazonaws.com/DEV-AWS-MO-Architecting/exercise-1-serverless.html

<!DOCTYPE html><html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"" xml:l=
ang=3D""><head><meta http-equiv=3D"Content-Type" content=3D"text/html; char=
set=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-388=
ee400-d21f-4539-a805-ff892e56c6a8@mhtml.blink" />
 =20
  <meta name=3D"generator" content=3D"pandoc">
  <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D=
1.0, user-scalable=3Dyes">
  <title>Exercise 1: Architecting Solutions: Building a Proof of Concept fo=
r a Serverless Solution</title>
 =20
 =20


</head><body data-new-gr-c-s-check-loaded=3D"14.1186.0" data-gr-ext-install=
ed=3D"">
<p><em>[version_1.0]</em></p>
<div style=3D"background-color: #FFD2D2; padding: 15px; margin-bottom: 25px=
">
<h3>
<span class=3D"fa fa-info-circle"></span> Note
</h3>
<p>The exercises in this course will have an associated charge in your AWS =
account. In this exercise, you will create the following resources:</p>
<ul>
<li>AWS Identity and Access Management (IAM) policy and user (policies and =
users are AWS account features, offered at no additional charge)</li>
<li>Amazon DynamoDB table</li>
<li>AWS Lambda functions</li>
<li>Amazon Simple Queue Service (Amazon SQS) queue</li>
<li>Amazon Simple Notification Service (Amazon SNS) topic</li>
<li>Amazon API Gateway</li>
<li><p>Amazon CloudWatch Logs</p>
<p><strong>The final task in this exercise includes instructions to delete =
all the resources that you create.</strong></p></li>
</ul>
<p>Familiarize yourself with <strong><a href=3D"https://aws.amazon.com/dyna=
modb/pricing/">DynamoDB pricing</a></strong>, <strong><a href=3D"https://aw=
s.amazon.com/sqs/pricing/">Amazon SQS pricing</a></strong>, <strong><a href=
=3D"https://aws.amazon.com/sns/pricing/">Amazon SNS pricing</a></strong>, <=
strong><a href=3D"https://aws.amazon.com/lambda/pricing/">Lambda pricing</a=
></strong>, <strong><a href=3D"https://aws.amazon.com/api-gateway/pricing/"=
>API Gateway pricing</a></strong>, <strong><a href=3D"https://aws.amazon.co=
m/cloudwatch/pricing/">CloudWatch Logs pricing</a></strong>, and the <stron=
g><a href=3D"https://aws.amazon.com/free/">AWS Free Tier</a></strong>.</p>
</div>
<h1 id=3D"exercise-1.-architecting-solutions-building-a-proof-of-concept-fo=
r-a-serverless-solution">Exercise 1. Architecting Solutions: Building a Pro=
of of Concept for a Serverless Solution</h1>
<p>This exercise provides you with instructions for how to build a proof of=
 concept for a serverless solution in the AWS Cloud.</p>
<p>Suppose you have a customer that needs a serverless web backend hosted o=
n AWS. The customer sells cleaning supplies and often sees spikes in demand=
 for their website, which means that they need an architecture that can eas=
ily scale in and out as demand changes. The customer also wants to ensure t=
hat the application has decoupled application components.</p>
<p>The following architectural diagram shows the flow for the serverless so=
lution that you will build.</p>
<figure>
<img src=3D"https://aws-tc-largeobjects.s3.us-west-2.amazonaws.com/DEV-AWS-=
MO-Architecting/images/exercise-1.png" alt=3D"Architecture diagram for exer=
cise 1"><figcaption>Architecture diagram for exercise 1</figcaption>
</figure>
<p>In this architecture, you will use a REST API to place a database entry =
in the Amazon SQS queue. Amazon SQS will then invoke the first Lambda funct=
ion, which inserts the entry into a DynamoDB table. After that, DynamoDB St=
reams will capture a record of the new entry in a database and invoke a sec=
ond Lambda function. The function will pass the database entry to Amazon SN=
S. After Amazon SNS processes the new record, it will send you a notificati=
on through a specified email address.</p>
<p>In this exercise, you will learn how to do the following:</p>
<ul>
<li>Create IAM policies and roles to follow best practices of working in th=
e AWS Cloud.</li>
<li>Create a DynamoDB table to store data.</li>
<li>Create an Amazon SQS queue to receive, store, and send messages between=
 software components.</li>
<li>Create Lambda functions and set up triggers to invoke actions in differ=
ent AWS services.<br>
</li>
<li>Enable DynamoDB Streams to capture modifications in the database table.=
</li>
<li>Configure Amazon SNS to receive email or text notifications.</li>
<li>Create a REST API to insert data into a database.</li>
</ul>
<blockquote>
<p><strong>Notes:</strong></p>
<p>To complete the instructions in this exercise, choose the <strong>US Eas=
t (N. Virginia) us-east-1</strong> Region in the navigation pane of the AWS=
 Management Console.</p>
<p>The instructions might prompt you to enter your account ID. Your account=
 ID is a 12-digit account number that appears under your account alias in t=
he top-right corner of the AWS Management Console. When you enter your acco=
unt number (ID), make sure that you remove hyphens (-).</p>
</blockquote>
<h2 id=3D"task-1.-setup-creating-iam-policies-and-roles">Task 1. Setup: Cre=
ating IAM policies and roles</h2>
<p>When you first create an account on AWS, you become a root user, or an a=
ccount owner. We don=E2=80=99t recommend that you use the account root user=
 for daily operations and tasks. Instead, you should use an IAM user or IAM=
 roles to access specific services and features. IAM policies, users, and r=
oles are offered at no additional charge.</p>
<p>In this task, you create custom IAM policies and roles to grant limited =
permissions to specific AWS services.</p>
<h3 id=3D"step-1.1-creating-custom-iam-policies">Step 1.1: Creating custom =
IAM policies</h3>
<ol type=3D"1">
<li><p>Sign in to the AWS Management Console.</p></li>
<li><p>In the search box, enter <strong>IAM</strong>.</p></li>
<li><p>From the results list, choose <strong>IAM</strong>.</p></li>
<li><p>In the navigation pane, choose <strong>Policies</strong>.</p></li>
<li><p>Choose <strong>Create policy</strong>.</p>
<p>The <strong>Create policy</strong> page appears. You can create and edit=
 a policy in the visual editor or use JSON. In this exercise, we provide JS=
ON scripts to create policies. In total, you must create four policies.</p>=
</li>
<li><p>In the JSON tab, paste the following code:</p>
<div class=3D"sourceCode" id=3D"cb1"><pre class=3D"sourceCode json" id=3D"c=
odeblock0"><code class=3D"sourceCode json"><a class=3D"sourceLine" id=3D"cb=
1-1" title=3D"1"><span class=3D"fu">{</span></a>
<a class=3D"sourceLine" id=3D"cb1-2" title=3D"2">    <span class=3D"dt">"Ve=
rsion"</span><span class=3D"fu">:</span> <span class=3D"st">"2012-10-17"</s=
pan><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb1-3" title=3D"3">    <span class=3D"dt">"St=
atement"</span><span class=3D"fu">:</span> <span class=3D"ot">[</span></a>
<a class=3D"sourceLine" id=3D"cb1-4" title=3D"4">        <span class=3D"fu"=
>{</span></a>
<a class=3D"sourceLine" id=3D"cb1-5" title=3D"5">            <span class=3D=
"dt">"Sid"</span><span class=3D"fu">:</span> <span class=3D"st">"VisualEdit=
or0"</span><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb1-6" title=3D"6">            <span class=3D=
"dt">"Effect"</span><span class=3D"fu">:</span> <span class=3D"st">"Allow"<=
/span><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb1-7" title=3D"7">            <span class=3D=
"dt">"Action"</span><span class=3D"fu">:</span> <span class=3D"ot">[</span>=
</a>
<a class=3D"sourceLine" id=3D"cb1-8" title=3D"8">                <span clas=
s=3D"st">"dynamodb:PutItem"</span><span class=3D"ot">,</span></a>
<a class=3D"sourceLine" id=3D"cb1-9" title=3D"9">                <span clas=
s=3D"st">"dynamodb:DescribeTable"</span></a>
<a class=3D"sourceLine" id=3D"cb1-10" title=3D"10">            <span class=
=3D"ot">]</span><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb1-11" title=3D"11">            <span class=
=3D"dt">"Resource"</span><span class=3D"fu">:</span> <span class=3D"st">"*"=
</span></a>
<a class=3D"sourceLine" id=3D"cb1-12" title=3D"12">        <span class=3D"f=
u">}</span></a>
<a class=3D"sourceLine" id=3D"cb1-13" title=3D"13">    <span class=3D"ot">]=
</span></a>
<a class=3D"sourceLine" id=3D"cb1-14" title=3D"14"><span class=3D"fu">}</sp=
an></a></code></pre><button class=3D"btn copybtn" data-clipboard-target=3D"=
#codeblock0"><img class=3D"clipboard" src=3D"https://aws-tc-largeobjects.s3=
.us-west-2.amazonaws.com/DEV-AWS-MO-Architecting/images/clipboard.svg" widt=
h=3D"13" alt=3D"Copy to clipboard"></button></div>
<p>This JSON script grants permissions to put items into the DynamoDB table=
. The asterisk (*) indicates that the specified actions can apply to all av=
ailable resources.</p></li>
<li><p>Choose <strong>Next: Tags</strong> and then choose <strong>Next: Rev=
iew</strong>.</p></li>
<li><p>For the policy name, enter <code>Lambda-Write-DynamoDB</code>.</p></=
li>
<li><p>Choose <strong>Create policy</strong>.</p></li>
<li><p>After you create the Lambda-Write-DynamoDB policy, repeat the previo=
us steps to create the following policies:</p>
<ul>
<li><p>A policy for Amazon SNS to get, list, and publish topics that are re=
ceived by Lambda:</p>
<ul>
<li><strong>Name</strong>: <code>Lambda-SNS-Publish</code></li>
<li><strong>JSON</strong>:</li>
</ul>
<div class=3D"sourceCode" id=3D"cb2"><pre class=3D"sourceCode json" id=3D"c=
odeblock1"><code class=3D"sourceCode json"><a class=3D"sourceLine" id=3D"cb=
2-1" title=3D"1"><span class=3D"fu">{</span></a>
<a class=3D"sourceLine" id=3D"cb2-2" title=3D"2">    <span class=3D"dt">"Ve=
rsion"</span><span class=3D"fu">:</span> <span class=3D"st">"2012-10-17"</s=
pan><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb2-3" title=3D"3">    <span class=3D"dt">"St=
atement"</span><span class=3D"fu">:</span> <span class=3D"ot">[</span></a>
<a class=3D"sourceLine" id=3D"cb2-4" title=3D"4">        <span class=3D"fu"=
>{</span></a>
<a class=3D"sourceLine" id=3D"cb2-5" title=3D"5">            <span class=3D=
"dt">"Sid"</span><span class=3D"fu">:</span> <span class=3D"st">"VisualEdit=
or0"</span><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb2-6" title=3D"6">            <span class=3D=
"dt">"Effect"</span><span class=3D"fu">:</span> <span class=3D"st">"Allow"<=
/span><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb2-7" title=3D"7">            <span class=3D=
"dt">"Action"</span><span class=3D"fu">:</span> <span class=3D"ot">[</span>=
</a>
<a class=3D"sourceLine" id=3D"cb2-8" title=3D"8">                <span clas=
s=3D"st">"sns:Publish"</span><span class=3D"ot">,</span></a>
<a class=3D"sourceLine" id=3D"cb2-9" title=3D"9">                <span clas=
s=3D"st">"sns:GetTopicAttributes"</span><span class=3D"ot">,</span></a>
<a class=3D"sourceLine" id=3D"cb2-10" title=3D"10">                    <spa=
n class=3D"st">"sns:ListTopics"</span></a>
<a class=3D"sourceLine" id=3D"cb2-11" title=3D"11">            <span class=
=3D"ot">]</span><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb2-12" title=3D"12">                <span cl=
ass=3D"dt">"Resource"</span><span class=3D"fu">:</span> <span class=3D"st">=
"*"</span></a>
<a class=3D"sourceLine" id=3D"cb2-13" title=3D"13">        <span class=3D"f=
u">}</span></a>
<a class=3D"sourceLine" id=3D"cb2-14" title=3D"14">    <span class=3D"ot">]=
</span></a>
<a class=3D"sourceLine" id=3D"cb2-15" title=3D"15"> <span class=3D"fu">}</s=
pan></a></code></pre><button class=3D"btn copybtn" data-clipboard-target=3D=
"#codeblock1"><img class=3D"clipboard" src=3D"https://aws-tc-largeobjects.s=
3.us-west-2.amazonaws.com/DEV-AWS-MO-Architecting/images/clipboard.svg" wid=
th=3D"13" alt=3D"Copy to clipboard"></button></div></li>
<li><p>A policy for Lambda to get records from DynamoDB Streams:</p>
<ul>
<li><strong>Name</strong>: <code>Lambda-DynamoDBStreams-Read</code></li>
<li><strong>JSON</strong>:</li>
</ul>
<div class=3D"sourceCode" id=3D"cb3"><pre class=3D"sourceCode json" id=3D"c=
odeblock2"><code class=3D"sourceCode json"><a class=3D"sourceLine" id=3D"cb=
3-1" title=3D"1"><span class=3D"fu">{</span></a>
<a class=3D"sourceLine" id=3D"cb3-2" title=3D"2">    <span class=3D"dt">"Ve=
rsion"</span><span class=3D"fu">:</span> <span class=3D"st">"2012-10-17"</s=
pan><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb3-3" title=3D"3">    <span class=3D"dt">"St=
atement"</span><span class=3D"fu">:</span> <span class=3D"ot">[</span></a>
<a class=3D"sourceLine" id=3D"cb3-4" title=3D"4">        <span class=3D"fu"=
>{</span></a>
<a class=3D"sourceLine" id=3D"cb3-5" title=3D"5">            <span class=3D=
"dt">"Sid"</span><span class=3D"fu">:</span> <span class=3D"st">"VisualEdit=
or0"</span><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb3-6" title=3D"6">            <span class=3D=
"dt">"Effect"</span><span class=3D"fu">:</span> <span class=3D"st">"Allow"<=
/span><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb3-7" title=3D"7">            <span class=3D=
"dt">"Action"</span><span class=3D"fu">:</span> <span class=3D"ot">[</span>=
</a>
<a class=3D"sourceLine" id=3D"cb3-8" title=3D"8">                <span clas=
s=3D"st">"dynamodb:GetShardIterator"</span><span class=3D"ot">,</span></a>
<a class=3D"sourceLine" id=3D"cb3-9" title=3D"9">                <span clas=
s=3D"st">"dynamodb:DescribeStream"</span><span class=3D"ot">,</span></a>
<a class=3D"sourceLine" id=3D"cb3-10" title=3D"10">                <span cl=
ass=3D"st">"dynamodb:ListStreams"</span><span class=3D"ot">,</span></a>
<a class=3D"sourceLine" id=3D"cb3-11" title=3D"11">                <span cl=
ass=3D"st">"dynamodb:GetRecords"</span></a>
<a class=3D"sourceLine" id=3D"cb3-12" title=3D"12">            <span class=
=3D"ot">]</span><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb3-13" title=3D"13">            <span class=
=3D"dt">"Resource"</span><span class=3D"fu">:</span> <span class=3D"st">"*"=
</span></a>
<a class=3D"sourceLine" id=3D"cb3-14" title=3D"14">        <span class=3D"f=
u">}</span></a>
<a class=3D"sourceLine" id=3D"cb3-15" title=3D"15">    <span class=3D"ot">]=
</span></a>
<a class=3D"sourceLine" id=3D"cb3-16" title=3D"16"><span class=3D"fu">}</sp=
an></a></code></pre><button class=3D"btn copybtn" data-clipboard-target=3D"=
#codeblock2"><img class=3D"clipboard" src=3D"https://aws-tc-largeobjects.s3=
.us-west-2.amazonaws.com/DEV-AWS-MO-Architecting/images/clipboard.svg" widt=
h=3D"13" alt=3D"Copy to clipboard"></button></div></li>
<li><p>A policy for Lambda to read messages that are placed in Amazon SQS:<=
/p>
<ul>
<li><strong>Name</strong>: <code>Lambda-Read-SQS</code></li>
<li><strong>JSON</strong>:</li>
</ul>
<div class=3D"sourceCode" id=3D"cb4"><pre class=3D"sourceCode json" id=3D"c=
odeblock3"><code class=3D"sourceCode json"><a class=3D"sourceLine" id=3D"cb=
4-1" title=3D"1"><span class=3D"fu">{</span></a>
<a class=3D"sourceLine" id=3D"cb4-2" title=3D"2">    <span class=3D"dt">"Ve=
rsion"</span><span class=3D"fu">:</span> <span class=3D"st">"2012-10-17"</s=
pan><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb4-3" title=3D"3">    <span class=3D"dt">"St=
atement"</span><span class=3D"fu">:</span> <span class=3D"ot">[</span></a>
<a class=3D"sourceLine" id=3D"cb4-4" title=3D"4">        <span class=3D"fu"=
>{</span></a>
<a class=3D"sourceLine" id=3D"cb4-5" title=3D"5">            <span class=3D=
"dt">"Sid"</span><span class=3D"fu">:</span> <span class=3D"st">"VisualEdit=
or0"</span><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb4-6" title=3D"6">            <span class=3D=
"dt">"Effect"</span><span class=3D"fu">:</span> <span class=3D"st">"Allow"<=
/span><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb4-7" title=3D"7">            <span class=3D=
"dt">"Action"</span><span class=3D"fu">:</span> <span class=3D"ot">[</span>=
</a>
<a class=3D"sourceLine" id=3D"cb4-8" title=3D"8">                <span clas=
s=3D"st">"sqs:DeleteMessage"</span><span class=3D"ot">,</span></a>
<a class=3D"sourceLine" id=3D"cb4-9" title=3D"9">                <span clas=
s=3D"st">"sqs:ReceiveMessage"</span><span class=3D"ot">,</span></a>
<a class=3D"sourceLine" id=3D"cb4-10" title=3D"10">                <span cl=
ass=3D"st">"sqs:GetQueueAttributes"</span><span class=3D"ot">,</span></a>
<a class=3D"sourceLine" id=3D"cb4-11" title=3D"11">                <span cl=
ass=3D"st">"sqs:ChangeMessageVisibility"</span></a>
<a class=3D"sourceLine" id=3D"cb4-12" title=3D"12">            <span class=
=3D"ot">]</span><span class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb4-13" title=3D"13">            <span class=
=3D"dt">"Resource"</span><span class=3D"fu">:</span> <span class=3D"st">"*"=
</span></a>
<a class=3D"sourceLine" id=3D"cb4-14" title=3D"14">        <span class=3D"f=
u">}</span></a>
<a class=3D"sourceLine" id=3D"cb4-15" title=3D"15">    <span class=3D"ot">]=
</span></a>
<a class=3D"sourceLine" id=3D"cb4-16" title=3D"16"><span class=3D"fu">}</sp=
an></a></code></pre><button class=3D"btn copybtn" data-clipboard-target=3D"=
#codeblock3"><img class=3D"clipboard" src=3D"https://aws-tc-largeobjects.s3=
.us-west-2.amazonaws.com/DEV-AWS-MO-Architecting/images/clipboard.svg" widt=
h=3D"13" alt=3D"Copy to clipboard"></button></div></li>
</ul></li>
</ol>
<h3 id=3D"step-1.2-creating-iam-roles-and-attaching-policies-to-the-roles">=
Step 1.2: Creating IAM roles and attaching policies to the roles</h3>
<p>Because AWS follows the principle of least privilege, we recommend that =
you provide role-based access to only the AWS resources that are required t=
o perform a task. In this step, you create IAM roles and attach policies to=
 the roles.</p>
<ol type=3D"1">
<li><p>In the navigation pane of the IAM dashboard, choose <strong>Roles</s=
trong>.</p></li>
<li>Choose <strong>Create role</strong> and in the <strong>Select trusted e=
ntity</strong> page, configure the following settings:
<ul>
<li><strong>Trusted entity type</strong>: <em>AWS service</em></li>
<li><strong>Common use cases</strong>: <em>Lambda</em></li>
</ul></li>
<li><p>Choose <strong>Next</strong>.</p></li>
<li><p>On the <strong>Add permissions</strong> page, select <strong>Lambda-=
Write-DynamoDB</strong> and <strong>Lambda-Read-SQS</strong>.</p></li>
<li><p>Choose <strong>Next</strong></p></li>
<li><p>For <strong>Role name</strong>, enter <code>Lambda-SQS-DynamoDB</cod=
e>.</p></li>
<li><p>Choose <strong>Create role</strong>.</p></li>
<li><p>Follow the previous steps to create two more IAM roles:</p>
<ul>
<li>An IAM role for AWS Lambda: This role grants permissions to obtain reco=
rds from the DynamoDB streams and send the records to Amazon SNS. Use the f=
ollowing information to create the role.
<ul>
<li><strong>IAM role name</strong>: <code>Lambda-DynamoDBStreams-SNS</code>=
</li>
<li><strong>Trusted entity type</strong>: <em>AWS service</em></li>
<li><strong>Common use cases</strong>: <em>Lambda</em></li>
<li><strong>Attach policies</strong>: <em>Lambda-SNS-Publish</em> and <em>L=
ambda-DynamoDBStreams-Read</em></li>
</ul></li>
<li>An IAM role for Amazon API Gateway: This role grants permissions to sen=
d data to the SQS queue and push logs to Amazon CloudWatch for troubleshoot=
ing. Use the following information to create the role.
<ul>
<li><strong>IAM role name</strong>: <code>APIGateway-SQS</code></li>
<li><strong>Trusted entity type</strong>: <em>AWS service</em></li>
<li><strong>Common use cases</strong>: <em>API Gateway</em></li>
<li><strong>Attach policies</strong>: <em>AmazonAPIGatewayPushToCloudWatchL=
ogs</em></li>
</ul></li>
</ul></li>
</ol>
<h2 id=3D"task-2-creating-a-dynamodb-table">Task 2: Creating a DynamoDB tab=
le</h2>
<p>In this task, you create a DynamoDB table that ingests data that=E2=80=
=99s passed on through API Gateway.</p>
<ol type=3D"1">
<li><p>In the search box of the AWS Management Console, enter <strong>Dynam=
oDB</strong>.</p></li>
<li><p>From the list, choose the <strong>DynamoDB</strong> service.</p></li=
>
<li>On the <strong>Get started</strong> card, choose <strong>Create table</=
strong> and configure the following settings:
<ul>
<li><strong>Table</strong>: <code>orders</code></li>
<li><strong>Partition key</strong>: <code>orderID</code></li>
<li>Data type: Keep <strong>String</strong></li>
</ul></li>
<li><p>Keep the remaining settings at their default values, and choose <str=
ong>Create table</strong>.</p></li>
</ol>
<h2 id=3D"task-3-creating-an-sqs-queue">Task 3: Creating an SQS queue</h2>
<p>In this task, you create an SQS queue. In the architecture for this exer=
cise, the Amazon SQS receives data records from API Gateway, stores them, a=
nd then sends them to a database.</p>
<ol type=3D"1">
<li><p>In the AWS Management Console search box, enter <code>SQS</code> and=
 from the list, choose <strong>Simple Queue Service</strong>.</p></li>
<li><p>On the <strong>Get started</strong> card, choose <strong>Create queu=
e</strong>.</p>
<p>The <strong>Create queue</strong> page appears.</p></li>
<li>Configure the following settings:
<ul>
<li><strong>Name</strong>: <code>POC-Queue</code></li>
<li><strong>Access Policy</strong>: <em>Basic</em></li>
<li><strong>Define who can send messages to the queue</strong>:
<ul>
<li>Select <em>Only the specified AWS accounts, IAM users and roles</em></l=
i>
<li>In the box for this option, paste the Amazon Resource Name (ARN) for th=
e <em>APIGateway-SQS</em> IAM role</li>
<li><strong>Note</strong>: For example, your IAM role might look similar to=
 the following: <code>arn:aws:iam::&lt;account ID&gt;:role/APIGateway-SQS</=
code>.</li>
</ul></li>
<li><strong>Define who can receive messages from the queue</strong>:
<ul>
<li>Select <em>Only the specified AWS accounts, IAM users and roles</em>.</=
li>
<li>In the box for this option, paste the ARN for the <em>Lambda-SQS-Dynamo=
DB</em> IAM role.</li>
<li><strong>Note</strong>: For example, your IAM role might look similar to=
 the following: <code>arn:aws:iam::&lt;account_ID&gt;:role/Lambda-SQS-Dynam=
oDB</code></li>
</ul></li>
</ul></li>
<li><p>Choose <strong>Create queue</strong>.</p></li>
</ol>
<h2 id=3D"task-4-creating-a-lambda-function-and-setting-up-triggers">Task 4=
: Creating a Lambda function and setting up triggers</h2>
<p>In this task, you create a Lambda function that reads messages from the =
SQS queue and writes an order record to the DynamoDB table.</p>
<h3 id=3D"step-4.1-creating-a-lambda-function-for-the-lambda-sqs-dynamodb-r=
ole">Step 4.1: Creating a Lambda function for the Lambda-SQS-DynamoDB role<=
/h3>
<ol type=3D"1">
<li><p>In the AWS Management Console search box, enter <strong>Lambda</stro=
ng> and from the list, choose <strong>Lambda</strong>.</p></li>
<li>Choose <strong>Create function</strong> and configure the following set=
tings:
<ul>
<li><strong>Function option</strong>: <em>Author from scratch</em></li>
<li><strong>Function name</strong>: <code>POC-Lambda-1</code></li>
<li><strong>Runtime</strong>: <em>Python 3.9</em></li>
<li><strong>Change default execution role</strong>: <em>Use an existing rol=
e</em></li>
<li><strong>Existing role</strong>: <code>Lambda-SQS-DynamoDB</code></li>
</ul></li>
<li><p>Choose <strong>Create function</strong>.</p></li>
</ol>
<h3 id=3D"step-4.2-setting-up-amazon-sqs-as-a-trigger-to-invoke-the-functio=
n">Step 4.2: Setting up Amazon SQS as a trigger to invoke the function</h3>
<ol type=3D"1">
<li><p>If needed, expand the <strong>Function overview</strong> section.</p=
></li>
<li><p>Choose <strong>Add trigger</strong>.</p></li>
<li><p>For <strong>Trigger configuration</strong>, enter <code>SQS</code> a=
nd choose the service in the list.</p></li>
<li><p>For <strong>SQS queue</strong>, choose <strong>POC-Queue</strong>.</=
p></li>
<li><p>Add the trigger by choosing <strong>Add</strong>.</p></li>
</ol>
<h3 id=3D"step-4.3-adding-and-deploying-the-function-code">Step 4.3: Adding=
 and deploying the function code</h3>
<ol type=3D"1">
<li><p>On the <strong>POC-Lambda-1</strong> page, in the <strong>Code</stro=
ng> tab, replace the default Lambda function code with the following code:<=
/p>
<div class=3D"sourceCode" id=3D"cb5"><pre class=3D"sourceCode python" id=3D=
"codeblock4"><code class=3D"sourceCode python"><a class=3D"sourceLine" id=
=3D"cb5-1" title=3D"1"><span class=3D"im">import</span> boto3, uuid</a>
<a class=3D"sourceLine" id=3D"cb5-2" title=3D"2"></a>
<a class=3D"sourceLine" id=3D"cb5-3" title=3D"3">client <span class=3D"op">=
=3D</span> boto3.resource(<span class=3D"st">'dynamodb'</span>)</a>
<a class=3D"sourceLine" id=3D"cb5-4" title=3D"4">table <span class=3D"op">=
=3D</span> client.Table(<span class=3D"st">"orders"</span>)</a>
<a class=3D"sourceLine" id=3D"cb5-5" title=3D"5"></a>
<a class=3D"sourceLine" id=3D"cb5-6" title=3D"6"><span class=3D"kw">def</sp=
an> lambda_handler(event, context):</a>
<a class=3D"sourceLine" id=3D"cb5-7" title=3D"7">    <span class=3D"cf">for=
</span> record <span class=3D"kw">in</span> event[<span class=3D"st">'Recor=
ds'</span>]:</a>
<a class=3D"sourceLine" id=3D"cb5-8" title=3D"8">        <span class=3D"bu"=
>print</span>(<span class=3D"st">"test"</span>)</a>
<a class=3D"sourceLine" id=3D"cb5-9" title=3D"9">        payload <span clas=
s=3D"op">=3D</span> record[<span class=3D"st">"body"</span>]</a>
<a class=3D"sourceLine" id=3D"cb5-10" title=3D"10">        <span class=3D"b=
u">print</span>(<span class=3D"bu">str</span>(payload))</a>
<a class=3D"sourceLine" id=3D"cb5-11" title=3D"11">        table.put_item(I=
tem<span class=3D"op">=3D</span> {<span class=3D"st">'orderID'</span>: <spa=
n class=3D"bu">str</span>(uuid.uuid4()),<span class=3D"st">'order'</span>: =
 payload})</a></code></pre><button class=3D"btn copybtn" data-clipboard-tar=
get=3D"#codeblock4"><img class=3D"clipboard" src=3D"https://aws-tc-largeobj=
ects.s3.us-west-2.amazonaws.com/DEV-AWS-MO-Architecting/images/clipboard.sv=
g" width=3D"13" alt=3D"Copy to clipboard"></button></div></li>
<li><p>Choose <strong>Deploy</strong>.</p>
<p>The Lambda code passes arguments to a function call. As a result, when a=
 trigger invokes a function, Lambda runs the code that you specify.</p>
<p>When you use Lambda, you are responsible only for your code. Lambda mana=
ges the memory, CPU, network, and other resources to run your code.</p></li=
>
</ol>
<h3 id=3D"step-4.4-testing-the-poc-lambda-1-lambda-function">Step 4.4: Test=
ing the POC-Lambda-1 Lambda function</h3>
<ol type=3D"1">
<li>In the <strong>Test</strong> tab, create a new event that has the follo=
wing settings:
<ul>
<li><strong>Event name</strong>: <code>POC-Lambda-Test-1</code></li>
<li><strong>Template-Optional</strong>: <code>SQS</code></li>
</ul>
<p>The SQS template appears in the <strong>Event JSON</strong> field.</p></=
li>
<li><p>Save your changes and choose <strong>Test</strong>.</p>
<p>After the Lambda function runs successfully, the =E2=80=9CExecution resu=
lt: succeeded=E2=80=9D message appears in the notification banner in the <s=
trong>Test</strong> section. This means that the Lambda function sent a tes=
t message =E2=80=9CHello from SQS!=E2=80=9D from the SQS template to the Dy=
namoDB table.</p></li>
</ol>
<h3 id=3D"step-4.5-verifying-that-the-lambda-function-adds-the-test-message=
-to-a-database">Step 4.5: Verifying that the Lambda function adds the test =
message to a database</h3>
<ol type=3D"1">
<li><p>In the AWS Management Console search box, enter <code>DynamoDB</code=
> and from the list, choose <strong>DynamoDB</strong>.</p></li>
<li><p>In the navigation pane, choose <strong>Explore items</strong>.</p></=
li>
<li><p>Select the <strong>orders</strong> database. Under <strong>Items ret=
urned</strong>, the <strong>orders</strong> table returns =E2=80=9CHello fr=
om SQS!=E2=80=9D from the Lambda function test.</p></li>
</ol>
<h2 id=3D"task-5-enabling-dynamodb-streams">Task 5: Enabling DynamoDB Strea=
ms</h2>
<p>In this task, you enable DynamoDB Streams. A DynamoDB stream captures in=
formation about every modification to data items in the table.</p>
<ol type=3D"1">
<li><p>In the DynamoDB console, in the <strong>Tables</strong> section of t=
he navigation pane, choose <strong>Update settings</strong>.</p></li>
<li><p>In the <strong>Tables</strong> card, make sure that the <strong>orde=
rs</strong> table is selected.</p></li>
<li><p>Choose the <strong>Exports and streams</strong> tab.</p></li>
<li><p>In the <strong>DynamoDB stream details</strong> section, choose <str=
ong>Enable</strong>.</p></li>
<li><p>For <strong>View type</strong>, choose <strong>New image</strong>.</=
p></li>
<li><p>Choose <strong>Enable stream</strong>.</p>
<p>After the Lambda function reads messages from the SQS queue and writes a=
n order record to the DynamoDB table, DynamoDB Streams captures the primary=
 key attributes from the record.</p></li>
</ol>
<h2 id=3D"task-6-creating-an-sns-topic-and-setting-up-subscriptions">Task 6=
: Creating an SNS topic and setting up subscriptions</h2>
<p>In this task, you create an SNS topic and set up subscriptions. Amazon S=
NS coordinates and manages delivering or sending messages to subscriber end=
points or clients.</p>
<h3 id=3D"step-6.1-creating-a-topic-in-the-notification-service">Step 6.1: =
Creating a topic in the notification service</h3>
<ol type=3D"1">
<li><p>In the AWS Management Console, search for <code>SNS</code> and choos=
e <strong>Simple Notification Service</strong>.</p></li>
<li><p>On the <strong>Create topic</strong> card, enter <code>POC-Topic</co=
de> and choose <strong>Next step</strong>.</p></li>
<li><p>In the <strong>Details</strong> section, keep the <strong>Standard</=
strong> topic type selected and choose <strong>Create topic</strong>.</p></=
li>
<li><p>On the <strong>POC-Topic</strong> page, copy the ARN of the topic th=
at you just created and save it for your reference.</p>
<p>You will need the ARN for the SNS topic later in this exercise.</p></li>
</ol>
<h3 id=3D"step-6.2-subscribing-to-email-notifications">Step 6.2: Subscribin=
g to email notifications</h3>
<ol type=3D"1">
<li><p>On the <strong>Subscriptions</strong> tab, choose <strong>Create sub=
scription</strong>.</p></li>
<li><p>For <strong>Topic ARN</strong>, make sure that the box contains the =
ARN for POC-Topic.</p></li>
<li><p>To receive notifications, for <strong>Protocol</strong>, choose <str=
ong>Email</strong>.</p></li>
<li><p>For <strong>Endpoint</strong>, enter your email address.</p></li>
<li><p>Choose <strong>Create subscription</strong>.</p>
<p>The confirmation message is sent to the email address that you specified=
.</p></li>
<li><p>After you receive the confirmation email message, confirm the subscr=
iption. If you don=E2=80=99t receive an email message within a few minutes,=
 check the spam folder.</p></li>
</ol>
<h2 id=3D"task-7-creating-an-aws-lambda-function-to-publish-a-message-to-th=
e-sns-topic">Task 7: Creating an AWS Lambda function to publish a message t=
o the SNS topic</h2>
<p>In this task, you create a Lambda function for the Lambda-DynamoDBStream=
s-SNS role. The second Lambda function uses DynamoDB Streams as a trigger t=
o pass the record of a new entry to Amazon SNS.</p>
<h3 id=3D"step-7.1-creating-a-poc-lambda-2-function">Step 7.1: Creating a P=
OC-Lambda-2 function</h3>
<ol type=3D"1">
<li><p>In the AWS Management Console, search for and open AWS Lambda.</p></=
li>
<li>Create a new Lambda function by choosing <strong>Create function</stron=
g>, and configure the following settings:
<ul>
<li><strong>Function option</strong>: <em>Author from scratch</em></li>
<li><strong>Function name</strong>: <code>POC-Lambda-2</code></li>
<li><strong>Runtime</strong>: <em>Python 3.9</em></li>
<li><strong>Change default execution role</strong>: <em>Use an existing rol=
e</em></li>
<li><strong>Existing role</strong>: <em>Lambda-DynamoDBStreams-SNS</em></li=
>
</ul>
<p>This role grants permissions to get records from DynamoDB Streams and se=
nd them to Amazon SNS.</p></li>
<li><p>Choose <strong>Create function</strong>.</p></li>
</ol>
<h3 id=3D"step-7.2-setting-up-dynamodb-as-a-trigger-to-invoke-a-lambda-func=
tion">Step 7.2: Setting up DynamoDB as a trigger to invoke a Lambda functio=
n</h3>
<ol type=3D"1">
<li>In the <strong>Function overview</strong> section, choose <strong>Add t=
rigger</strong> and configure the following settings:
<ul>
<li><strong>Trigger configuration</strong>: Enter <code>DynamoDB</code> and=
 from the list, choose <strong>DynamoDB</strong>.</li>
<li><strong>DynamoDB table</strong>: <em>orders</em></li>
</ul></li>
<li><p>Keep the remaining default settings and choose <strong>Add</strong>.=
</p></li>
<li><p>In the <strong>Configuration</strong> tab, make sure that you are in=
 the <strong>Triggers</strong> section and that the DynamoDB state is =E2=
=80=9CEnabled.=E2=80=9D</p></li>
</ol>
<h3 id=3D"step-7.3-configuring-the-second-lambda-function">Step 7.3: Config=
uring the second Lambda function</h3>
<ol type=3D"1">
<li><p>Choose the <strong>Code</strong> tab and replace the Lambda function=
 code with the following code:</p>
<div class=3D"sourceCode" id=3D"cb6"><pre class=3D"sourceCode python" id=3D=
"codeblock5"><code class=3D"sourceCode python"><a class=3D"sourceLine" id=
=3D"cb6-1" title=3D"1"><span class=3D"im">import</span> boto3, json</a>
<a class=3D"sourceLine" id=3D"cb6-2" title=3D"2"></a>
<a class=3D"sourceLine" id=3D"cb6-3" title=3D"3">client <span class=3D"op">=
=3D</span> boto3.client(<span class=3D"st">'sns'</span>)</a>
<a class=3D"sourceLine" id=3D"cb6-4" title=3D"4"></a>
<a class=3D"sourceLine" id=3D"cb6-5" title=3D"5"><span class=3D"kw">def</sp=
an> lambda_handler(event, context):</a>
<a class=3D"sourceLine" id=3D"cb6-6" title=3D"6"></a>
<a class=3D"sourceLine" id=3D"cb6-7" title=3D"7">    <span class=3D"cf">for=
</span> record <span class=3D"kw">in</span> event[<span class=3D"st">"Recor=
ds"</span>]:</a>
<a class=3D"sourceLine" id=3D"cb6-8" title=3D"8"></a>
<a class=3D"sourceLine" id=3D"cb6-9" title=3D"9">        <span class=3D"cf"=
>if</span> record[<span class=3D"st">'eventName'</span>] <span class=3D"op"=
>=3D=3D</span> <span class=3D"st">'INSERT'</span>:</a>
<a class=3D"sourceLine" id=3D"cb6-10" title=3D"10">            new_record <=
span class=3D"op">=3D</span> record[<span class=3D"st">'dynamodb'</span>][<=
span class=3D"st">'NewImage'</span>]    </a>
<a class=3D"sourceLine" id=3D"cb6-11" title=3D"11">            response <sp=
an class=3D"op">=3D</span> client.publish(</a>
<a class=3D"sourceLine" id=3D"cb6-12" title=3D"12">                TargetAr=
n<span class=3D"op">=3D</span><span class=3D"st">'&lt;Enter Amazon SNS ARN =
for the POC-Topic&gt;'</span>,</a>
<a class=3D"sourceLine" id=3D"cb6-13" title=3D"13">                Message<=
span class=3D"op">=3D</span>json.dumps({<span class=3D"st">'default'</span>=
: json.dumps(new_record)}),</a>
<a class=3D"sourceLine" id=3D"cb6-14" title=3D"14">                MessageS=
tructure<span class=3D"op">=3D</span><span class=3D"st">'json'</span></a>
<a class=3D"sourceLine" id=3D"cb6-15" title=3D"15">            )</a></code>=
</pre><button class=3D"btn copybtn" data-clipboard-target=3D"#codeblock5"><=
img class=3D"clipboard" src=3D"https://aws-tc-largeobjects.s3.us-west-2.ama=
zonaws.com/DEV-AWS-MO-Architecting/images/clipboard.svg" width=3D"13" alt=
=3D"Copy to clipboard"></button></div>
<p><strong>Note:</strong> In the function code, replace the <strong>TargetA=
rn</strong> value with the ARN for the Amazon SNS POC-Topic. Make sure that=
 you remove the placeholder angle brackets (&lt;&gt;).</p>
<p>Your ARN might look similar to the following: <code>arn:aws:sns:us-east-=
1:&lt;account ID&gt;:POC-Topic</code>.</p></li>
<li><p>Choose <strong>Deploy</strong>.</p></li>
</ol>
<h3 id=3D"step-7.4-testing-the-poc-lambda-2-lambda-function">Step 7.4: Test=
ing the POC-Lambda-2 Lambda function</h3>
<ol type=3D"1">
<li><p>On the <strong>Test</strong> tab, create a new event and for <strong=
>Event name</strong>, enter <code>POC-Lambda-Test-2</code>.</p></li>
<li><p>For <strong>Template-optional</strong>, enter <code>DynamoDB</code> =
and from the list, choose <strong>DynamoDB-Update</strong>.</p>
<p>The DynamoDB template appears in the <strong>Event JSON</strong> box.</p=
></li>
<li><p>Save your changes and choose <strong>Test</strong>.</p>
<p>After the Lambda function successfully runs, the =E2=80=9CExecution resu=
lt: succeeded=E2=80=9D message should appear in the notification banner in =
the <strong>Test</strong> section.</p>
<p>In a few minutes, an email message should arrive at the email address th=
at you specified in the previous task.</p></li>
<li><p>Confirm that you received the subscription email message. If needed,=
 check both your inbox and spam folder.</p></li>
</ol>
<h2 id=3D"task-8-creating-an-api-with-amazon-api-gateway">Task 8: Creating =
an API with Amazon API Gateway</h2>
<p>In this task, you create a REST API in Amazon API Gateway. The API serve=
s as a communication gateway between your application and the AWS services.=
</p>
<ol type=3D"1">
<li><p>In the AWS Management Console, search for and open <strong>API Gatew=
ay</strong>.</p></li>
<li>On the <strong>REST API</strong> card with a public authentication, cho=
ose <strong>Build</strong> and configure the following settings:
<ul>
<li><strong>Choose the protocol</strong>: <em>REST</em></li>
<li><strong>Create new API</strong>: <em>New API</em></li>
<li><strong>API name</strong>: <code>POC-API</code></li>
<li><strong>Endpoint Type</strong>: <em>Regional</em></li>
</ul></li>
<li><p>Choose <strong>Create API</strong>.</p></li>
<li><p>On the <strong>Actions</strong> menu, choose <strong>Create Method</=
strong>.</p></li>
<li><p>Open the method menu by choosing the down arrow, and choose <strong>=
POST</strong>. Save your changes by choosing the check mark.</p></li>
<li>In the <strong>POST - Setup</strong> pane, configure the following sett=
ings:
<ul>
<li><strong>Integration type</strong>: <em>AWS Service</em></li>
<li><strong>AWS Region</strong>: <em>us-east-1</em></li>
<li><strong>AWS Service</strong>: <em>Simple Queue Service (SQS)</em></li>
<li><strong>AWS Subdomain</strong>: Keep empty</li>
<li><strong>HTTP method</strong>: <em>POST</em></li>
<li><strong>Action Type</strong>: <em>Use path override</em></li>
<li><strong>Path override</strong>: Enter your account ID followed by a sla=
sh (/) and the name of the POC queue
<ul>
<li><strong>Note</strong>: If <em>POC-Queue</em> is the name of the SQS que=
ue that you created, this entry might look similar to the following: <code>=
/&lt;account ID&gt;/POC-Queue</code></li>
</ul></li>
<li><strong>Execution role</strong>: Paste the ARN of the APIGateway-SQS ro=
le
<ul>
<li><strong>Note</strong>: For example, the ARN might look like the followi=
ng: <code>arn:aws:iam::&lt;account ID&gt;:role/APIGateway-SQS</code></li>
</ul></li>
<li><strong>Content Handling</strong>: <em>Passthrough</em></li>
</ul></li>
<li><p>Save your changes.</p></li>
<li><p>Choose the <strong>Integration Request</strong> card.</p></li>
<li><p>Scroll to the bottom of the page and expand <strong>HTTP Headers</st=
rong>.</p></li>
<li><p>Choose <strong>Add header</strong>.</p></li>
<li><p>For <strong>Name</strong>, enter <code>Content-Type</code></p></li>
<li><p>For <strong>Mapped from</strong>, enter <code>'application/x-www-for=
m-urlencoded'</code></p></li>
<li><p>Save your changes to the <strong>HTTP Headers</strong> section by ch=
oosing the check mark.</p></li>
<li><p>Expand <strong>Mapping Templates</strong> and for <strong>Request bo=
dy passthrough</strong>, choose <strong>Never</strong>.</p></li>
<li><p>Choose <strong>Add mapping template</strong> and for <strong>Content=
-Type</strong> , enter <code>application/json</code></p></li>
<li><p>Save your changes by choosing the check mark.</p></li>
<li><p>For <strong>Generate template</strong>, do not choose a default temp=
late from the list. Instead, enter the following command: <code>Action=3DSe=
ndMessage&amp;MessageBody=3D$input.body</code> in a box.</p></li>
<li><p>Choose <strong>Save</strong>.</p></li>
</ol>
<h2 id=3D"task-9-testing-the-architecture-by-using-api-gateway">Task 9: Tes=
ting the architecture by using API Gateway</h2>
<p>In this task, you use API Gateway to send mock data to Amazon SQS as a p=
roof of concept for the serverless solution.</p>
<ol type=3D"1">
<li><p>In the API Gateway console, return to the <strong>POST - Method Exec=
ution</strong> page and choose <strong>Test</strong>.</p></li>
<li><p>In the <strong>Request Body</strong> box, enter:</p>
<div class=3D"sourceCode" id=3D"cb7"><pre class=3D"sourceCode json" id=3D"c=
odeblock6"><code class=3D"sourceCode json"><a class=3D"sourceLine" id=3D"cb=
7-1" title=3D"1"><span class=3D"fu">{</span>  <span class=3D"dt">"item"</sp=
an><span class=3D"fu">:</span> <span class=3D"st">"latex gloves"</span><spa=
n class=3D"fu">,</span></a>
<a class=3D"sourceLine" id=3D"cb7-2" title=3D"2"><span class=3D"dt">"custom=
erID"</span><span class=3D"fu">:</span><span class=3D"st">"12345"</span><sp=
an class=3D"fu">}</span></a></code></pre><button class=3D"btn copybtn" data=
-clipboard-target=3D"#codeblock6"><img class=3D"clipboard" src=3D"https://a=
ws-tc-largeobjects.s3.us-west-2.amazonaws.com/DEV-AWS-MO-Architecting/image=
s/clipboard.svg" width=3D"13" alt=3D"Copy to clipboard"></button></div></li=
>
<li><p>Choose <strong>Test</strong>.</p>
<p>If you see the =E2=80=9CSuccessfully completed execution=E2=80=9D messag=
e with the 200 response in the logs on the right, you will receive an email=
 notification with the new entry. If you don=E2=80=99t receive an email, bu=
t the new item appears in the DynamoDB table, troubleshoot the exercise ins=
tructions starting from <em>after</em> you set up DynamoDB. Ensure that you=
 deploy all of the resources in the <em>us-east-1</em> Region.</p>
<p>After API Gateway successfully processes the request that you pasted in =
the <strong>Request Body</strong> box, it places the request in the SQS que=
ue. Because you set up Amazon SQS as a trigger in the first Lambda function=
, Amazon SQS invokes the function call. The Lambda function code places the=
 new entry into the DynamoDB table. DynamoDB Streams captures this change t=
o the database and invokes the second AWS Lambda function. This function ge=
ts the new record from DynamoDB Streams and sends it to Amazon SNS. Amazon =
SNS, in turn, sends you an email notification.</p></li>
</ol>
<h2 id=3D"task-10-cleaning-up">Task 10: Cleaning up</h2>
<p>In this task, you delete the AWS resources that you created for this exe=
rcise.</p>
<ol type=3D"1">
<li>Delete the DynamoDB table.
<ol type=3D"1">
<li>Open the DynamoDB console.</li>
<li>In the navigation pane, choose <strong>Tables</strong>.</li>
<li>Select the <strong>orders</strong> table.</li>
<li>Choose <strong>Delete</strong> and confirm your actions.</li>
</ol></li>
<li>Delete the Lambda functions.
<ol type=3D"1">
<li>Open the Lambda console.</li>
<li>Select the Lambda functions that you created in this exercise: <strong>=
POC-Lambda-1</strong> and <strong>POC-Lambda-2</strong>.</li>
<li>Choose <strong>Actions</strong>, <strong>Delete</strong>.</li>
<li>Confirm your actions and close the dialog box.</li>
</ol></li>
<li>Delete the SQS queue.
<ol type=3D"1">
<li>Open the Amazon SQS console.</li>
<li>Select the queue that you created in this exercise.</li>
<li>Choose <strong>Delete</strong> and confirm your actions.</li>
</ol></li>
<li>Delete the SNS topic and subscriptions.
<ol type=3D"1">
<li>Open the Amazon SNS console.</li>
<li>In the navigation pane, choose <strong>Topics</strong>.</li>
<li>Select <strong>POC-Topic</strong>.</li>
<li>Choose <strong>Delete</strong> and confirm your actions.</li>
<li>In the navigation pane, choose <strong>Subscriptions</strong>.</li>
<li>Select the subscription that you created in this exercise and choose <s=
trong>Delete</strong>.</li>
<li>Confirm your actions.</li>
</ol></li>
<li>Delete the API that you created.
<ol type=3D"1">
<li>Open the API Gateway console.</li>
<li>Select <strong>POC-API</strong>.</li>
<li>Choose <strong>Actions</strong>, <strong>Delete</strong>.</li>
<li>Confirm your actions.</li>
</ol></li>
<li>Delete the IAM roles and policies.
<ol type=3D"1">
<li>Open the IAM console.</li>
<li>In the navigation pane, choose <strong>Roles</strong>.</li>
<li>Delete the following roles and confirm your actions:
<ul>
<li><strong>APIGateway-SQS</strong></li>
<li><strong>Lambda-SQS-DynamoDB</strong></li>
<li><strong>Lambda-DynamoDBStreams-SNS</strong></li>
</ul></li>
<li>In the navigation pane, choose <strong>Policies</strong>.</li>
<li>Delete the following custom policies and confirm your actions:
<ul>
<li><strong>Lambda-DynamoDBStreams-Read</strong></li>
<li><strong>Lambda-SNS-Publish</strong></li>
<li><strong>Lambda-Write-DynamoDB</strong></li>
<li><strong>Lambda-Read-SQS</strong></li>
</ul></li>
</ol></li>
</ol>
<p>Congratulations! You have successfully completed the exercise.</p>



</body><grammarly-desktop-integration data-grammarly-shadow-root=3D"true"><=
template shadowmode=3D"open"><div aria-label=3D"grammarly-integration" role=
=3D"group" tabindex=3D"-1" class=3D"grammarly-desktop-integration" data-con=
tent=3D"{&quot;mode&quot;:&quot;full&quot;,&quot;isActive&quot;:true,&quot;=
isUserDisabled&quot;:false}"></div></template></grammarly-desktop-integrati=
on></html>
------MultipartBoundary--EazvHQuk4rvzvE5QVH4c7IWfvujUsGbj0j78sMiCw3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-388ee400-d21f-4539-a805-ff892e56c6a8@mhtml.blink

@charset "utf-8";

html, body { font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, =
sans-serif; margin: 1em; }

img:not(.clipboard) { max-width: 100%; height: auto; width: auto; }

button.copybtn { transition: opacity 0.3s ease-in-out 0s; opacity: 0; paddi=
ng: 2px 6px; position: absolute; right: 4px; top: 4px; }

div.sourceCode:hover .copybtn, div.sourceCode .copybtn:focus { opacity: 0.3=
; }

div.sourceCode .copybtn:hover { opacity: 1; }

div.sourceCode { position: relative; }

.xmodule_display.xmodule_HtmlBlock ol { padding: 0px 0px 0px 2em !important=
; }

.xmodule_display.xmodule_HtmlBlock ul { padding: 0px 0px 0px 2em !important=
; }

code { border-radius: 4px; padding: 2px 4px !important; background-color: r=
gb(238, 238, 238) !important; }

pre code { display: block; overflow-x: auto; margin: 0px 0px 10px; font-siz=
e: 13px; line-height: 1.42857; word-break: break-all; overflow-wrap: break-=
word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; white-space=
: pre; padding: 9.5px !important; background-color: rgb(245, 245, 245) !imp=
ortant; }

pre code span.al { color: rgb(255, 0, 0); font-weight: bold; }

pre code span.an { color: rgb(96, 160, 176); font-weight: bold; font-style:=
 italic; }

pre code span.at { color: rgb(125, 144, 41); }

pre code span.bn { color: rgb(64, 160, 112); }

pre code span.bu { color: rgb(6, 40, 126); }

pre code span.cf { color: rgb(0, 112, 32); font-weight: bold; }

pre code span.ch { color: rgb(64, 112, 160); }

pre code span.cn { color: rgb(136, 0, 0); }

pre code span.co { color: rgb(96, 160, 176); font-style: italic; }

pre code span.cv { color: rgb(96, 160, 176); font-weight: bold; font-style:=
 italic; }

pre code span.do { color: rgb(186, 33, 33); font-style: italic; }

pre code span.dt { color: rgb(144, 32, 0); }

pre code span.dv { color: rgb(64, 160, 112); }

pre code span.er { color: rgb(255, 0, 0); font-weight: bold; }

pre code span.ex { color: rgb(6, 40, 126); }

pre code span.fl { color: rgb(64, 160, 112); }

pre code span.fu { color: rgb(6, 40, 126); }

pre code span.im { }

pre code span.in { color: rgb(96, 160, 176); font-weight: bold; font-style:=
 italic; }

pre code span.kw { color: rgb(0, 112, 32); font-weight: bold; }

pre code span.op { color: rgb(102, 102, 102); }

pre code span.ot { color: rgb(0, 112, 32); }

pre code span.pp { color: rgb(188, 122, 0); }

pre code span.sc { color: rgb(64, 112, 160); }

pre code span.ss { color: rgb(187, 102, 136); }

pre code span.st { color: rgb(64, 112, 160); }

pre code span.va { color: rgb(25, 23, 124); }

pre code span.vs { color: rgb(64, 112, 160); }

pre code span.wa { color: rgb(96, 160, 176); font-weight: bold; font-style:=
 italic; }
------MultipartBoundary--EazvHQuk4rvzvE5QVH4c7IWfvujUsGbj0j78sMiCw3----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://aws-tc-largeobjects.s3.us-west-2.amazonaws.com/DEV-AWS-MO-Architecting/images/exercise-1.png

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
vrR9N/aH7W85wDxQe9DyYOUh2qHSeqR+an1fQ1ZDV2NyY0dTaFNLs1fzocOOh3ccMT1ScVT36NJj
lGPzjw0cLz7ef0J8ovdk5slHLRNb7pxKOnWtNbq1/XTY6XNngs6cOss6e/yc97kj5z3PN11gXmi4
6Haxvs217dDvrr8fandrr7/kfqnxssfl5o4xHceu+F45eTXg6plrnGsXr0dc77gRf+NmZ2pn103+
zWe3cm+9ul10+/Od2XcJd0vvad4rv294v+oP2z/quty6jj4IeND2MPbhnUe8Ry8eFzz+0j3/CfVJ
+VOTp9XPnJ8d6Qnqufx83PPuF+IXn3tL/tT6s/KlzcuDf/n91daX1Nf9SvJq4PXiN/pvdrx1edvS
H9V//13eu8/vSz/of9j5kfnx7KfET08/T/5C+rL2q+3X5m9h3+4O5A0MiLkSrvxXAIMVzcgA4PUO
AKjJANDg+YwyTnH+kxdEcWaVI/CfsOKMKC9uANTC//foXvh30wnA3m3w+AX1NVIBiKICEOcB0NGj
h+rgWU1+rpQVIjwHbOZ8Tc9LB/+mKM6cP8T9cwtkqi7g5/ZfNO98YR5/H/kAAACWZVhJZk1NACoA
AAAIAAUBEgADAAAAAQABAAABGgAFAAAAAQAAAEoBGwAFAAAAAQAAAFIBKAADAAAAAQACAACHaQAE
AAAAAQAAAFoAAAAAAAAAkAAAAAEAAACQAAAAAQADkoYABwAAABIAAACEoAIABAAAAAEAAAMgoAMA
BAAAAAEAAAH3AAAAAEFTQ0lJAAAAU2NyZWVuc2hvdGoYr5cAAAAJcEhZcwAAFiUAABYlAUlSJPAA
AALZaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5z
Om1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA2LjAuMCI+CiAgIDxyZGY6UkRGIHhtbG5zOnJkZj0i
aHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgICAgIDxyZGY6
RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICAgICAgICAgIHhtbG5zOmV4aWY9Imh0dHA6Ly9u
cy5hZG9iZS5jb20vZXhpZi8xLjAvIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMu
YWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDxleGlmOlBpeGVsWERpbWVuc2lvbj4xNTk0
PC9leGlmOlBpeGVsWERpbWVuc2lvbj4KICAgICAgICAgPGV4aWY6VXNlckNvbW1lbnQ+U2NyZWVu
c2hvdDwvZXhpZjpVc2VyQ29tbWVudD4KICAgICAgICAgPGV4aWY6UGl4ZWxZRGltZW5zaW9uPjEw
MDI8L2V4aWY6UGl4ZWxZRGltZW5zaW9uPgogICAgICAgICA8dGlmZjpSZXNvbHV0aW9uVW5pdD4y
PC90aWZmOlJlc29sdXRpb25Vbml0PgogICAgICAgICA8dGlmZjpZUmVzb2x1dGlvbj4xNDQ8L3Rp
ZmY6WVJlc29sdXRpb24+CiAgICAgICAgIDx0aWZmOlhSZXNvbHV0aW9uPjE0NDwvdGlmZjpYUmVz
b2x1dGlvbj4KICAgICAgICAgPHRpZmY6T3JpZW50YXRpb24+MTwvdGlmZjpPcmllbnRhdGlvbj4K
ICAgICAgPC9yZGY6RGVzY3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CqcQoJUA
AEAASURBVHgB7H0HgFXF9f733tvKsgvLLr13BAUFQQRUjDW22GOJvSYaYzTFnykmMYlJjP4TE42J
RqOmmWKJLfYuIBYUC01ApMP23v/fd+bOe29XiFhAVmZ235125sy5Z869Z86dFmujQ3CBA4EDgQOB
A4EDgQOBA4EDgQOBA4ED24AD8W1QR6gicCBwIHAgcCBwIHAgcCBwIHAgcCBwwDgQDJAgCIEDgQOB
A4EDgQOBA4EDgQOBA4ED24wDwQDZZqwOFQUOBA4EDgQOBA4EDgQOBA4EDgQOBAMkyEDgQOBA4EDg
QOBA4EDgQOBA4EDgwDbjQDBAthmrQ0WBA4EDgQOBA4EDgQOBA4EDgQOBA8EACTIQOBA4EDgQOBA4
EDgQOBA4EDgQOLDNOBAMkG3G6lBR4EDgQOBA4EDgQOBA4EDgQOBA4EAwQIIMBA4EDgQOBA4EDgQO
BA4EDgQOBA5sMw4EA2SbsTpUFDgQOBA4EDgQOBA4EDgQOBA4EDgQDJAgA4EDgQOBA4EDgQOBA4ED
gQOBA4ED24wDwQDZZqwOFQUOBA4EDgQOBA4EDgQOBA4EDgQOBAMkyEDgQOBA4EDgQOBA4EDgQOBA
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

------MultipartBoundary--EazvHQuk4rvzvE5QVH4c7IWfvujUsGbj0j78sMiCw3----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://aws-tc-largeobjects.s3.us-west-2.amazonaws.com/DEV-AWS-MO-Architecting/images/clipboard.svg

<svg height=3D"1024" width=3D"896" xmlns=3D"http://www.w3.org/2000/svg">
  <path d=3D"M128 768h256v64H128v-64z m320-384H128v64h320v-64z m128 192V448=
L384 640l192 192V704h320V576H576z m-288-64H128v64h160v-64zM128 704h160v-64H=
128v64z m576 64h64v128c-1 18-7 33-19 45s-27 18-45 19H64c-35 0-64-29-64-64V1=
92c0-35 29-64 64-64h192C256 57 313 0 384 0s128 57 128 128h192c35 0 64 29 64=
 64v320h-64V320H64v576h640V768zM128 256h512c0-35-29-64-64-64h-64c-35 0-64-2=
9-64-64s-29-64-64-64-64 29-64 64-29 64-64 64h-64c-35 0-64 29-64 64z" />
</svg>=0A
------MultipartBoundary--EazvHQuk4rvzvE5QVH4c7IWfvujUsGbj0j78sMiCw3------
